// Video service types for backend API integration

export type VideoProvider = 'youtube' | 'vimeo' | 'twitch';

export interface VideoInfo {
  id: string;
  provider: VideoProvider;
  title: string;
  description: string;
  duration: number; // in seconds
  thumbnailUrl: string;
  url: string;
  capabilities?: VideoCapabilities;
}

export interface VideoCapabilities {
  hasTranscript: boolean;
  availableLanguages: Language[];
  supportsAutoGenerated: boolean;
}

export interface Language {
  code: string;
  name: string;
}

export interface TranscriptSegment {
  startTime: number; // in milliseconds
  endTime: number; // in milliseconds
  text: string;
  index: number;
}

export interface TranscriptResponse {
  videoId: string;
  provider: VideoProvider;
  language: string;
  segments: TranscriptSegment[];
  available: boolean;
  source: 'manual' | 'auto-generated' | 'forced';
}

export interface VideoError {
  error: string;
  code?: string;
  details?: string;
}

// API Request types
export interface GetVideoInfoRequest {
  videoUrl: string;
}

export interface GetTranscriptRequest {
  videoUrl: string;
  language?: string;
}

export interface GetAvailableLanguagesRequest {
  videoUrl: string;
}

export interface GetCapabilitiesRequest {
  videoUrl: string;
}

// API Response types
export interface GetVideoInfoResponse extends VideoInfo {}

export interface GetTranscriptResponseData extends TranscriptResponse {}

export interface GetAvailableLanguagesResponse {
  videoId: string;
  provider: VideoProvider;
  languages: Language[];
}

export interface GetCapabilitiesResponse extends VideoCapabilities {}

export interface GetSupportedProvidersResponse {
  providers: VideoProvider[];
}

export interface GetSupportedLanguagesResponse {
  languages: Language[];
}

// Utility types
export interface VideoApiConfig {
  baseUrl: string;
  timeout?: number;
  retries?: number;
  authToken?: string;
}

export interface VideoApiError extends Error {
  code?: string;
  details?: string;
  status?: number;
}

// Additional types for hooks
export type VideoTranscript = TranscriptResponse;

export interface VideoProgressRequest {
  videoId: string;
  currentTime: number;
  duration: number;
  completed?: boolean;
}
